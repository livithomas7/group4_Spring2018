{"filter":false,"title":"movies_controller.rb","tooltip":"/Project/bennett_code/group4_spring2018/app/controllers/movies_controller.rb","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":66,"column":0},"action":"remove","lines":["class MoviesController < ApplicationController","","  def movie_params","    params.require(:tenants).permit(:dashboard, :maintenance, :message, :documents, :paymen)","  end","","  def show","    id = params[:id] # retrieve movie ID from URI route","<<<<<<< HEAD","<<<<<<< HEAD","    @movies = Movie.find(id) # look up movie by unique ID","=======","    @movie = Movie.find(id) # look up movie by unique ID",">>>>>>> first committ","=======","    @movie = Movie.find(id) # look up movie by unique ID",">>>>>>> f88b4dcd2076d727efb494d9edd30fc50b0438bd","    # will render app/views/movies/show.<extension> by default","  end","","  def index","<<<<<<< HEAD","<<<<<<< HEAD","    @movies = Movie.all","=======","=======",">>>>>>> f88b4dcd2076d727efb494d9edd30fc50b0438bd","    @all_ratings = Movie.ratings","    @sort = params[:sort]","    @ratings = params[:ratings].nil? ? @all_ratings : params[:ratings].keys","    @movies = Movie.where('rating IN (?)', @ratings).order(@sort)","<<<<<<< HEAD",">>>>>>> first committ","=======",">>>>>>> f88b4dcd2076d727efb494d9edd30fc50b0438bd","  end","","  def new","    # default: render 'new' template","  end","","  def create","    @movie = Movie.create!(movie_params)","    flash[:notice] = \"#{@movie.title} was successfully created.\"","    redirect_to movies_path","  end","","  def edit","    @movie = Movie.find params[:id]","  end","","  def update","    @movie = Movie.find params[:id]","    @movie.update_attributes!(movie_params)","    flash[:notice] = \"#{@movie.title} was successfully updated.\"","    redirect_to movie_path(@movie)","  end","","  def destroy","    @movie = Movie.find(params[:id])","    @movie.destroy","    flash[:notice] = \"Movie '#{@movie.title}' deleted.\"","    redirect_to movies_path","  end","","end",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["class MoviesController < ApplicationController","","  def movie_params","    params.require(:tenants).permit(:dashboard, :maintenance, :message, :documents, :paymen)","  end","","  def show","    id = params[:id] # retrieve movie ID from URI route","    @movies = Movie.find(id) # look up movie by unique ID","    # will render app/views/movies/show.<extension> by default","  end","","  def index","    @movies = Movie.all","  end","","  def new","    # default: render 'new' template","  end","","  def create","    @movie = Movie.create!(movie_params)","    flash[:notice] = \"#{@movie.title} was successfully created.\"","    redirect_to movies_path","  end","","  def edit","    @movie = Movie.find params[:id]","  end","","  def update","    @movie = Movie.find params[:id]","    @movie.update_attributes!(movie_params)","    flash[:notice] = \"#{@movie.title} was successfully updated.\"","    redirect_to movie_path(@movie)","  end","","  def destroy","    @movie = Movie.find(params[:id])","    @movie.destroy","    flash[:notice] = \"Movie '#{@movie.title}' deleted.\"","    redirect_to movies_path","  end","","end",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":45,"column":0},"end":{"row":45,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1519029522745,"hash":"eccadc45e97a7d3d00793d47829e05f364da2213"}